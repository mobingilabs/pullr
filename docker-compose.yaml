version: '3'
networks:
  pullr:
    external: false

services:
  pullr-mongodb:
    container_name: pullr-mongodb
    image: mongo:latest
    command: --auth --bind_ip_all
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - "./data/mongodb:/data/db"
    labels:
      - traefik.enable=false
    networks:
      pullr:

  pullr-rabbitmq:
    container_name: pullr-rabitmq
    image: rabbitmq:3.7.3-alpine
    volumes:
      - "./data/rabbbitmq:/var/lib/rabbitmq"
    networks:
      pullr:
    labels:
      - traefik.enable=false

  docker-registry-tokensrv:
    container_name: docker-registry-tokensrv
    image: cesanta/docker_auth:1
    command: ["--v=3", "--alsologtostderr", "/conf/docker_auth.yml"]
    volumes:
      - "./conf:/conf:ro"
      - "./certs:/certs:ro"
    networks:
      proxy:
      pullr:
    depends_on:
      - pullr-mongodb
    labels:
      - traefik.frontend.rule=Host:reg.pullr.dev;PathPrefixStrip:/tokensrv
      - traefik.protocol=https
      - traefik.port=5001
      - traefik.passHostHeader=true

  docker-registry-internal:
    container_name: docker-registry-internal
    image: registry:2
    environment:
      - REGISTRY_HTTP_ADDR=':5050'
      - REGISTRY_AUTH_TOKEN_REALM='https://docker-registry-tokensrv:5001/auth'
    volumes:
      - "./certs:/certs:ro"
      - "./conf/docker_registry.yml:/etc/docker/registry/config.yml:ro"
      - "./data/registry:/var/lib/registry:rw"
    expose:
      - 5050
    depends_on:
      - docker-registry-tokensrv
    labels:
      - traefik.enable=false
    networks:
      pullr:
        aliases:
          - docker-registry

  docker-registry-external:
    container_name: docker-registry-external
    image: registry:2
    volumes:
      - "./certs:/certs:ro"
      - "./conf/docker_registry.yml:/etc/docker/registry/config.yml:ro"
      - "./data/registry:/var/lib/registry:rw"
    environment:
      - REGISTRY_AUTH_TOKEN_REALM='https://reg.pullr.dev/tokensrv/auth'
    depends_on:
      - docker-registry-tokensrv
    labels:
      - traefik.frontend.rule=Host:reg.pullr.dev
      - traefik.port=5000
      - traefik.protocol=https
      - traefik.passHostHeader=true
    networks:
      proxy:
      pullr:

  pullr-ui:
    container_name: pullr-ui
    image: mobingilabs/pullr-ui:localdev
    networks:
      pullr:
      proxy:
    labels:
      - traefik.frontend.rule=Host:pullr.dev
      - traefik.port=80
      - traefik.passHostHeader=true

  pullr-apisrv:
    container_name: pullr-apisrv
    image: mobingilabs/pullr-apisrv:localdev
    command: ["serve"]
    networks:
      pullr:
      proxy:
    volumes:
      - "./certs:/certs:ro"
    expose:
      - 8080
    labels:
      - traefik.backend=pullr-apisrv
      - traefik.frontend.rule=Host:pullr.dev;PathPrefix:/api
      - traefik.docker.network=pullr
      - traefik.port=8080
      - traefik.passHostHeader=true
    environment:
      - PULLR_OAUTH_GITHUB_CLIENTID=$GITHUBID
      - PULLR_OAUTH_GITHUB_CLIENTSECRET=$GITHUBSECRET
    depends_on:
      - pullr-mongodb
      - pullr-rabbitmq

  pullr-proxy:
    image: traefik:v1.5.2-alpine
    command: ["--docker"]
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./certs:/certs:ro"
      - "./conf/traefik.toml:/traefik.toml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      proxy:
      pullr:
